CMAKE_MINIMUM_REQUIRED(VERSION 2.8.8)

PROJECT(r3d)

FIND_PACKAGE(OpenGL REQUIRED)
#FIND_PACKAGE(PkgConfig REQUIRED)
#PKG_SEARCH_MODULE(GLFW REQUIRED glfw3)

INCLUDE_DIRECTORIES(inc)
INCLUDE_DIRECTORIES(ext/glew-1.13.0/include)
INCLUDE_DIRECTORIES(ext/lodepng/include)
INCLUDE_DIRECTORIES(ext/litehtml/include)
INCLUDE_DIRECTORIES(${GLFW_INCLUDE_DIRS})

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DGLEW_STATIC -DGLEW_NO_GLU -std=c99 -g -Wall")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DGLEW_STATIC -DGLEW_NO_GLU -std=c++11 -g -Wall")

if(UNIX OR APPLE)
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
endif()

# Compile dependancies
ADD_SUBDIRECTORY(ext/glew-1.13.0)
ADD_SUBDIRECTORY(ext/lodepng)
ADD_SUBDIRECTORY(ext/litehtml)

# Compile r3d source
FILE(GLOB SRC_FILES
    "src/*.cpp"
)
ADD_LIBRARY(r3dlib OBJECT ${SRC_FILES})

# Build static library
# static library don't need -fPIC however to rebuild is painful...
ADD_LIBRARY(r3dstatic STATIC $<TARGET_OBJECTS:r3dlib>)
SET_TARGET_PROPERTIES(r3dstatic PROPERTIES OUTPUT_NAME r3d)
TARGET_LINK_LIBRARIES(r3dstatic glfw3)
TARGET_LINK_LIBRARIES(r3dstatic glew)
TARGET_LINK_LIBRARIES(r3dstatic lodepng)
TARGET_LINK_LIBRARIES(r3dstatic ${OPENGL_LIBRARIES})
TARGET_LINK_LIBRARIES(r3dstatic dl)

# Build shared library
ADD_LIBRARY(r3d SHARED $<TARGET_OBJECTS:r3dlib>)
TARGET_LINK_LIBRARIES(r3d glfw3)
TARGET_LINK_LIBRARIES(r3d glew)
TARGET_LINK_LIBRARIES(r3d lodepng)
TARGET_LINK_LIBRARIES(r3d ${OPENGL_LIBRARIES})

# Build test program
# There will be many test programs so using shared library would be wise
FILE(GLOB SRC_FILES
    "test/*.cpp"
)

ADD_EXECUTABLE(R3DTest ${SRC_FILES})
TARGET_LINK_LIBRARIES(R3DTest r3d)